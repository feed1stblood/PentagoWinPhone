<phone:PhoneApplicationPage xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:phone="clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone" xmlns:shell="clr-namespace:Microsoft.Phone.Shell;assembly=Microsoft.Phone" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:PentagoWeb_Helper="clr-namespace:PentagoWeb.Helper" xmlns:toolkit="clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone.Controls.Toolkit" xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity" xmlns:GalaSoft_MvvmLight_Command="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Extras.WP71" xmlns:ei="clr-namespace:Microsoft.Expression.Interactivity.Media;assembly=Microsoft.Expression.Interactions" xmlns:System="clr-namespace:System;assembly=mscorlib" xmlns:Pentago_Helper="clr-namespace:Pentago.Helper" xmlns:ec="clr-namespace:Microsoft.Expression.Interactivity.Core;assembly=Microsoft.Expression.Interactions" x:Name="phoneApplicationPage" x:Class="Pentago.MainPage"
                            SupportedOrientations="Landscape"
                            Orientation="Landscape"
                            mc:Ignorable="d"
                            
							d:DesignWidth="728"
                            d:DesignHeight="480" 
							
                            shell:SystemTray.IsVisible="True" BackKeyPress="phoneApplicationPage_BackKeyPress">
	<phone:PhoneApplicationPage.Resources>

		<Pentago_Helper:PlayerToIconConverter x:Key="PlayerToIconConverter1"/>

		<Pentago_Helper:PlayerToIconConverter x:Key="PlayerToIconConverter"/>

		<Pentago_Helper:DimensionDivisionConverter x:Key="DimensionDivisionConverter"/>

		<PentagoWeb_Helper:ChessPieceConverter x:Key="ChessPieceConverter"/>

		<Style x:Key="ListBoxItemStyle2" TargetType="ListBoxItem">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="ListBoxItem">
						<Grid Margin="0" Background="White">
							<Image Source="{Binding State, Converter={StaticResource ChessPieceConverter}}" Margin="10" />
							<Border BorderBrush="Black" BorderThickness="1"/>		
		
						</Grid>	
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<ItemsPanelTemplate x:Key="BoardItemsPanelTemplate">
			<toolkit:WrapPanel x:Name="wrapPanel" ItemHeight="79" ItemWidth="79"/>
		</ItemsPanelTemplate>
		<Style x:Key="RotateButtonStyle1" TargetType="Button">
			<Setter Property="Background" Value="#FF1F3B53"/>
			<Setter Property="Foreground" Value="#FF000000"/>
			<Setter Property="Padding" Value="3"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="BorderBrush">
				<Setter.Value>
					<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
						<GradientStop Color="#FFA3AEB9" Offset="0"/>
						<GradientStop Color="#FF8399A9" Offset="0.375"/>
						<GradientStop Color="#FF718597" Offset="0.375"/>
						<GradientStop Color="#FF617584" Offset="1"/>
					</LinearGradientBrush>
				</Setter.Value>
			</Setter>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Button">
						<Grid>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="MouseOver">
										<Storyboard>
											<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundAnimation"/>
											<ColorAnimation Duration="0" To="#F2FFFFFF" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
											<ColorAnimation Duration="0" To="#CCFFFFFF" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
											<ColorAnimation Duration="0" To="#7FFFFFFF" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Pressed">
										<Storyboard>
											<ColorAnimation Duration="0" To="#FF6DBDD1" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Background"/>
											<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundAnimation"/>
											<ColorAnimation Duration="0" To="#D8FFFFFF" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
											<ColorAnimation Duration="0" To="#C6FFFFFF" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
											<ColorAnimation Duration="0" To="#8CFFFFFF" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
											<ColorAnimation Duration="0" To="#3FFFFFFF" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Disabled"/>
								</VisualStateGroup>
								<VisualStateGroup x:Name="FocusStates">
									<VisualState x:Name="Focused"/>
									<VisualState x:Name="Unfocused"/>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="White" CornerRadius="3">
								<Grid Background="{TemplateBinding Background}" Margin="1">
									<Border x:Name="BackgroundAnimation" Background="#FF448DCA" Opacity="0"/>
									<Rectangle x:Name="BackgroundGradient">
										<Rectangle.Fill>
											<LinearGradientBrush EndPoint=".7,1" StartPoint=".7,0">
												<GradientStop Color="#FFFFFFFF" Offset="0"/>
												<GradientStop Color="#F9FFFFFF" Offset="0.375"/>
												<GradientStop Color="#E5FFFFFF" Offset="0.625"/>
												<GradientStop Color="#C6FFFFFF" Offset="1"/>
											</LinearGradientBrush>
										</Rectangle.Fill>
									</Rectangle>
								</Grid>
							</Border>
							<Image Source="Resource/arrow.png" x:Name="contentPresenter" Margin="{TemplateBinding Padding}" RenderTransformOrigin="0.5,0.5">
								<Image.RenderTransform>
									<CompositeTransform Rotation="0"/>
								</Image.RenderTransform>
							</Image>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="RotateButtonStyle2" TargetType="Button">
			<Setter Property="Background" Value="#FF1F3B53"/>
			<Setter Property="Foreground" Value="#FF000000"/>
			<Setter Property="Padding" Value="3"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="BorderBrush">
				<Setter.Value>
					<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
						<GradientStop Color="#FFA3AEB9" Offset="0"/>
						<GradientStop Color="#FF8399A9" Offset="0.375"/>
						<GradientStop Color="#FF718597" Offset="0.375"/>
						<GradientStop Color="#FF617584" Offset="1"/>
					</LinearGradientBrush>
				</Setter.Value>
			</Setter>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Button">
						<Grid Width="80" Height="80" Clip="M0,0 L0,100 L32,100 L32,32 L100,32 L100,0 z">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="MouseOver">
										<Storyboard>
											<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundAnimation"/>
											<ColorAnimation Duration="0" To="#F2FFFFFF" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
											<ColorAnimation Duration="0" To="#CCFFFFFF" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
											<ColorAnimation Duration="0" To="#7FFFFFFF" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Pressed">
										<Storyboard>
											<ColorAnimation Duration="0" To="#FF6DBDD1" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Background"/>
											<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundAnimation"/>
											<ColorAnimation Duration="0" To="#D8FFFFFF" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
											<ColorAnimation Duration="0" To="#C6FFFFFF" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
											<ColorAnimation Duration="0" To="#8CFFFFFF" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
											<ColorAnimation Duration="0" To="#3FFFFFFF" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Disabled"/>
								</VisualStateGroup>
								<VisualStateGroup x:Name="FocusStates">
									<VisualState x:Name="Focused"/>
									<VisualState x:Name="Unfocused"/>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="3" CornerRadius="1">
								<Grid Background="{TemplateBinding Background}" Margin="1">
									<Border x:Name="BackgroundAnimation" Background="#FF448DCA" Opacity="0"/>
									<Rectangle x:Name="BackgroundGradient" >
										
										<Rectangle.Fill>
											<LinearGradientBrush EndPoint=".7,1" StartPoint=".7,0">
												<GradientStop Color="#FFFFFFFF" Offset="0"/>
												<GradientStop Color="#F9FFFFFF" Offset="0.375"/>
												<GradientStop Color="#E5FFFFFF" Offset="0.625"/>
												<GradientStop Color="#C6FFFFFF" Offset="1"/>
											</LinearGradientBrush>
										</Rectangle.Fill>
									</Rectangle>
								</Grid>
							</Border>
							<Image Source="Resource/arrow.png" x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RenderTransformOrigin="0.5,0.5" Stretch="Fill">
								<Image.RenderTransform>
									<CompositeTransform Rotation="0"/>
								</Image.RenderTransform>
							</Image>
							<Rectangle StrokeThickness="3" RadiusX="1" Stroke="{TemplateBinding BorderBrush}" Width="50" Height="50" Margin="30,30,0,0"/>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<ControlTemplate x:Key="ValidationToolTipTemplate">
			<Grid x:Name="Root" Margin="5,0" Opacity="0" RenderTransformOrigin="0,0">
				<Grid.RenderTransform>
					<TranslateTransform x:Name="xform" X="-25"/>
				</Grid.RenderTransform>
				<VisualStateManager.VisualStateGroups>
					<VisualStateGroup x:Name="OpenStates">
						<VisualStateGroup.Transitions>
							<VisualTransition GeneratedDuration="0"/>
							<VisualTransition GeneratedDuration="0:0:0.2" To="Open">
								<Storyboard>
									<DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="X" Storyboard.TargetName="xform">
										<DoubleAnimation.EasingFunction>
											<BackEase Amplitude=".3" EasingMode="EaseOut"/>
										</DoubleAnimation.EasingFunction>
									</DoubleAnimation>
									<DoubleAnimation Duration="0:0:0.2" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root"/>
								</Storyboard>
							</VisualTransition>
						</VisualStateGroup.Transitions>
						<VisualState x:Name="Closed">
							<Storyboard>
								<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root"/>
							</Storyboard>
						</VisualState>
						<VisualState x:Name="Open">
							<Storyboard>
								<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="X" Storyboard.TargetName="xform"/>
								<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root"/>
							</Storyboard>
						</VisualState>
					</VisualStateGroup>
				</VisualStateManager.VisualStateGroups>
				<Border Background="#052A2E31" CornerRadius="5" Margin="4,4,-4,-4"/>
				<Border Background="#152A2E31" CornerRadius="4" Margin="3,3,-3,-3"/>
				<Border Background="#252A2E31" CornerRadius="3" Margin="2,2,-2,-2"/>
				<Border Background="#352A2E31" CornerRadius="2" Margin="1,1,-1,-1"/>
				<Border Background="#FFDC000C" CornerRadius="2"/>
				<Border CornerRadius="2">
					<TextBlock Foreground="White" MaxWidth="250" Margin="8,4,8,4" TextWrapping="Wrap" Text="{Binding (Validation.Errors)[0].ErrorContent}" UseLayoutRounding="false"/>
				</Border>
			</Grid>
		</ControlTemplate>
		<Style x:Key="ListBoxStyle1" TargetType="ListBox">
			<Setter Property="Padding" Value="1"/>
			<Setter Property="Background" Value="#FFFFFFFF"/>
			<Setter Property="Foreground" Value="#FF000000"/>
			<Setter Property="HorizontalContentAlignment" Value="Left"/>
			<Setter Property="VerticalContentAlignment" Value="Top"/>
			<Setter Property="IsTabStop" Value="False"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="TabNavigation" Value="Once"/>
			<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
			<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
			<Setter Property="BorderBrush">
				<Setter.Value>
					<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
						<GradientStop Color="#FFA3AEB9" Offset="0"/>
						<GradientStop Color="#FF8399A9" Offset="0.375"/>
						<GradientStop Color="#FF718597" Offset="0.375"/>
						<GradientStop Color="#FF617584" Offset="1"/>
					</LinearGradientBrush>
				</Setter.Value>
			</Setter>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="ListBox">
						<Grid>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="ValidationStates">
									<VisualState x:Name="Valid"/>
									<VisualState x:Name="InvalidUnfocused">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
												<DiscreteObjectKeyFrame KeyTime="0">
													<DiscreteObjectKeyFrame.Value>
														<Visibility>Visible</Visibility>
													</DiscreteObjectKeyFrame.Value>
												</DiscreteObjectKeyFrame>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="InvalidFocused">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
												<DiscreteObjectKeyFrame KeyTime="0">
													<DiscreteObjectKeyFrame.Value>
														<Visibility>Visible</Visibility>
													</DiscreteObjectKeyFrame.Value>
												</DiscreteObjectKeyFrame>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="validationTooltip">
												<DiscreteObjectKeyFrame KeyTime="0">
													<DiscreteObjectKeyFrame.Value>
														<System:Boolean>True</System:Boolean>
													</DiscreteObjectKeyFrame.Value>
												</DiscreteObjectKeyFrame>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2">
								<!--<ScrollViewer x:Name="ScrollViewer" BorderBrush="Transparent" BorderThickness="0" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" TabNavigation="{TemplateBinding TabNavigation}">
									<ItemsPresenter/>
								</ScrollViewer>-->
								<ItemsPresenter/>
							</Border>
							<Border x:Name="ValidationErrorElement" BorderBrush="#FFDB000C" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" Visibility="Collapsed">
								<ToolTipService.ToolTip>
									<ToolTip x:Name="validationTooltip" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Template="{StaticResource ValidationToolTipTemplate}">
										<ToolTip.Triggers>
											<EventTrigger RoutedEvent="Canvas.Loaded">
												<BeginStoryboard>
													<Storyboard>
														<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="validationTooltip">
															<DiscreteObjectKeyFrame KeyTime="0">
																<DiscreteObjectKeyFrame.Value>
																	<System:Boolean>true</System:Boolean>
																</DiscreteObjectKeyFrame.Value>
															</DiscreteObjectKeyFrame>
														</ObjectAnimationUsingKeyFrames>
													</Storyboard>
												</BeginStoryboard>
											</EventTrigger>
										</ToolTip.Triggers>
									</ToolTip>
								</ToolTipService.ToolTip>
								<Grid Background="Transparent" HorizontalAlignment="Right" Height="10" Margin="0,-4,-4,0" VerticalAlignment="Top" Width="10">
									<Path Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z" Fill="#FFDC000C" Margin="-1,3,0,0"/>
									<Path Data="M 0,0 L2,0 L 8,6 L8,8" Fill="#ffffff" Margin="-1,3,0,0"/>
								</Grid>
							</Border>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="SectionStyleStyle1" TargetType="ListBoxItem">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="ListBoxItem">
						<Grid Background="Black">
							<Grid.Resources>
								<Storyboard x:Name="StoryboardRotateClockwise"/>
								<Storyboard x:Name="StoryboardRotateCounterclockwise"/>
							</Grid.Resources>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<ItemsPanelTemplate x:Key="SectionsPanelTemplate1">
			<toolkit:WrapPanel x:Name="wrapPanel" ItemHeight="239" ItemWidth="239"/>
		</ItemsPanelTemplate>
		<DataTemplate x:Key="SectionTemplate1">
			<Grid Width="239" Height="239" RenderTransformOrigin="0.5,0.5">
				<Grid.Resources>
					<Storyboard x:Name="StoryboardRotateClockwise">
						<DoubleAnimation By="90" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.Rotation)" Storyboard.TargetName="listBox"/>
					</Storyboard>
					<Storyboard x:Name="StoryboardRotateCounterclockwise">
						<DoubleAnimation By="-90" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.Rotation)" Storyboard.TargetName="listBox"/>
					</Storyboard>
				</Grid.Resources>
							
				
				<Button x:Name="BtnRotateClockwise" HorizontalAlignment="Left" VerticalAlignment="Top" Style="{StaticResource RotateButtonStyle1}" Width="150" Height="40" Canvas.ZIndex="5" Visibility="{Binding Main.RotateButtonVisibility, Source={StaticResource Locator}}">
					<i:Interaction.Triggers>
						<i:EventTrigger EventName="Click">
							<GalaSoft_MvvmLight_Command:EventToCommand x:Name="BeforeRotateClockwiseEvent" Command="{Binding CmdStartRotatingClockwise}"/>
										
						</i:EventTrigger>
						<ei:StoryboardCompletedTrigger Storyboard="{StaticResource StoryboardRotateClockwise}">
							<GalaSoft_MvvmLight_Command:EventToCommand x:Name="AfterRotateEvent" Command="{Binding CmdAfterRotatingClockwise}" CommandParameter="{Binding DataContext, ElementName=listBox}" />
						</ei:StoryboardCompletedTrigger>
						<i:EventTrigger SourceObject="{Binding Mode=OneWay}" EventName="RotateClockwise">
							<ei:ControlStoryboardAction x:Name="RotateClockwiseAction" Storyboard="{StaticResource StoryboardRotateClockwise}"/>
						</i:EventTrigger>
					</i:Interaction.Triggers>
				</Button>
				<Button x:Name="BtnRotateCounterclockwise" Content="Button" HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="150" Style="{StaticResource RotateButtonStyle1}" Height="40" RenderTransformOrigin="0.5,0.5" Canvas.ZIndex="5" Visibility="{Binding Main.RotateButtonVisibility, Source={StaticResource Locator}}">
					<i:Interaction.Triggers>
						<i:EventTrigger SourceObject="{Binding Mode=OneWay}" EventName="RotateCounterclockwise">
							<ei:ControlStoryboardAction x:Name="RotateCounterlockwiseAction" Storyboard="{StaticResource StoryboardRotateCounterclockwise}"/>
						</i:EventTrigger>
						<i:EventTrigger EventName="Click">
							<GalaSoft_MvvmLight_Command:EventToCommand x:Name="BeforeRotateCounterclockwiseEvent" Command="{Binding CmdStartRotatingCounterclockwise}"/>
						</i:EventTrigger>
						<ei:StoryboardCompletedTrigger Storyboard="{StaticResource StoryboardRotateCounterclockwise}">
							<GalaSoft_MvvmLight_Command:EventToCommand x:Name="AfterRotateEvent1" Command="{Binding CmdAfterRotatingCounterclockwise}" CommandParameter="{Binding DataContext, ElementName=listBox}" />
						</ei:StoryboardCompletedTrigger>
					</i:Interaction.Triggers>
					<Button.RenderTransform>
						<CompositeTransform ScaleY="-1"/>
					</Button.RenderTransform>
				</Button>
				
				<ListBox x:Name="listBox"  ItemsPanel="{StaticResource BoardItemsPanelTemplate}" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ItemContainerStyle="{StaticResource ListBoxItemStyle2}" Margin="0,0,0,-158" SelectedItem="{Binding Main.BoardContentSelectedItem, Mode=TwoWay, Source={StaticResource Locator}}" RenderTransformOrigin="0.5,0.5" IsEnabled="{Binding Main.Control.Placeable, Source={StaticResource Locator}}" ItemsSource="{Binding Content}" Style="{StaticResource ListBoxStyle1}" HorizontalAlignment="Left" Width="239" VerticalAlignment="Top">				
					<ListBox.RenderTransform>
						<CompositeTransform/>
					</ListBox.RenderTransform>
				</ListBox>
			</Grid>
		</DataTemplate>
		<Storyboard x:Name="StoryboardRotateClockwise">
			<DoubleAnimation By="90" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.Rotation)" Storyboard.TargetName="listBox"/>
		</Storyboard>
		<Style x:Key="ListBoxItemStyle1" TargetType="ListBoxItem">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="ListBoxItem">
						<Grid/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="SectionContainerStyle" TargetType="ListBoxItem">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="ListBoxItem">
						<Grid>
							<ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Top"/>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Storyboard x:Name="EnlargingFontStory">
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.FontSize)" Storyboard.TargetName="textBlock">
				<EasingDoubleKeyFrame KeyTime="0" Value="11"/>
				<EasingDoubleKeyFrame KeyTime="0:0:1" Value="96"/>
			</DoubleAnimationUsingKeyFrames>
			<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="grid">
				<DiscreteObjectKeyFrame KeyTime="0">
					<DiscreteObjectKeyFrame.Value>
						<Visibility>Visible</Visibility>
					</DiscreteObjectKeyFrame.Value>
				</DiscreteObjectKeyFrame>
			</ObjectAnimationUsingKeyFrames>
		</Storyboard>
		<Storyboard x:Name="EnlargePlayer1Story">
			<DoubleAnimation Duration="0:0:0.3" To="120" Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="player1Icon" d:IsOptimized="True"/>
			<DoubleAnimation Duration="0:0:0.3" To="120" Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="player1Icon" d:IsOptimized="True"/>
		</Storyboard>
		<Storyboard x:Name="ShrinkPlayer1Story">
			<DoubleAnimation Duration="0:0:0.3" To="65" Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="player1Icon" d:IsOptimized="True"/>
			<DoubleAnimation Duration="0:0:0.3" To="65" Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="player1Icon" d:IsOptimized="True"/>
		</Storyboard>
		<Storyboard x:Name="EnlargePlayer2Story">
			<DoubleAnimation Duration="0:0:0.3" To="120" Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="player2Icon" d:IsOptimized="True"/>
			<DoubleAnimation Duration="0:0:0.3" To="120" Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="player2Icon" d:IsOptimized="True"/>
		</Storyboard>
		<Storyboard x:Name="ShrinkPlayer2Story">
			<DoubleAnimation Duration="0:0:0.3" To="65" Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="player2Icon" d:IsOptimized="True"/>
			<DoubleAnimation Duration="0:0:0.3" To="65" Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="player2Icon" d:IsOptimized="True"/>
		</Storyboard>
	</phone:PhoneApplicationPage.Resources>
    
	<!-- Sample code showing usage of ApplicationBar
    <phone:PhoneApplicationPage.ApplicationBar>
        <shell:ApplicationBar IsVisible="True" IsMenuEnabled="True">
            <shell:ApplicationBarIconButton x:Name="appbar_button1" IconUri="/Images/appbar_button1.png" Text="Button 1"></shell:ApplicationBarIconButton>
            <shell:ApplicationBarIconButton x:Name="appbar_button2" IconUri="/Images/appbar_button2.png" Text="Button 2"></shell:ApplicationBarIconButton>
            <shell:ApplicationBar.MenuItems>
                <shell:ApplicationBarMenuItem x:Name="menuItem1" Text="MenuItem 1"></shell:ApplicationBarMenuItem>
                <shell:ApplicationBarMenuItem x:Name="menuItem2" Text="MenuItem 2"></shell:ApplicationBarMenuItem>
            </shell:ApplicationBar.MenuItems>
        </shell:ApplicationBar>
    </phone:PhoneApplicationPage.ApplicationBar>
    -->


	<phone:PhoneApplicationPage.DataContext>
		<Binding Path="Main" Source="{StaticResource Locator}"/>
	</phone:PhoneApplicationPage.DataContext>

	<Grid x:Name="LayoutRoot"
		Background="Transparent">
		<Grid x:Name="grid" Canvas.ZIndex="2" Background="#33808080" Visibility="{Binding MessagePanelVisibililty, Mode=OneWay}">
			<i:Interaction.Triggers>
				<i:EventTrigger SourceObject="{Binding Mode=OneWay}" EventName="MessageComing">
					<ei:ControlStoryboardAction Storyboard="{StaticResource EnlargingFontStory}"/>
				</i:EventTrigger>
				<i:EventTrigger EventName="ManipulationCompleted">
					<GalaSoft_MvvmLight_Command:EventToCommand x:Name="CloseMessageEvent" Command="{Binding CmdCloseMessage}"/>
				</i:EventTrigger>
			</i:Interaction.Triggers>
			<TextBlock x:Name="textBlock" HorizontalAlignment="Center" TextWrapping="Wrap" Text="{Binding GameMessage, Mode=OneWay}" VerticalAlignment="Center" Foreground="Black" FontWeight="Bold"/>
		</Grid>
		<Image HorizontalAlignment="Left" Margin="10,182,0,206" Width="100" Height="100"/>
		<Grid x:Name="grid1">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="1*" />
				<ColumnDefinition Width="480" />
				<ColumnDefinition Width="1*" />
			</Grid.ColumnDefinitions>
			<ListBox VerticalAlignment="Center" HorizontalAlignment="Center"  d:LayoutOverrides="GridBox" ItemsSource="{Binding Main.WholeBoard.Sections, Source={StaticResource Locator}}" Width="480" Height="480" ItemsPanel="{StaticResource SectionsPanelTemplate1}" Style="{StaticResource ListBoxStyle1}" ItemTemplate="{StaticResource SectionTemplate1}" ItemContainerStyle="{StaticResource SectionContainerStyle}" Grid.Column="1"/>
			<Image x:Name="player1Icon" Height="65" Margin="0" VerticalAlignment="Center" HorizontalAlignment="Center" Width="65" Source="{Binding Player1Icon, Converter={StaticResource PlayerToIconConverter1}}">
				<i:Interaction.Triggers>
					<i:EventTrigger SourceObject="{Binding Control, Mode=OneWay}" EventName="Player1sTurn">
						<ei:ControlStoryboardAction x:Name="enlarge1" Storyboard="{StaticResource EnlargePlayer1Story}"/>
					</i:EventTrigger>
					<i:EventTrigger SourceObject="{Binding Control, Mode=OneWay}" EventName="Player2sTurn">
						<ei:ControlStoryboardAction x:Name="shrink1" Storyboard="{StaticResource ShrinkPlayer1Story}"/>
					</i:EventTrigger>
					<i:EventTrigger SourceObject="{Binding ElementName=grid1}">
						<ei:ControlStoryboardAction x:Name="initialEnlarging" Storyboard="{StaticResource EnlargePlayer1Story}"/>
					</i:EventTrigger>
				</i:Interaction.Triggers>
			</Image>
			<Image x:Name="player2Icon" Height="65" VerticalAlignment="Center" HorizontalAlignment="Center" Width="65" Grid.Column="2" Source="{Binding Player2Icon, Converter={StaticResource PlayerToIconConverter}}">
				<i:Interaction.Triggers>
					<i:EventTrigger SourceObject="{Binding Control, Mode=OneWay}" EventName="Player2sTurn">
						<ei:ControlStoryboardAction x:Name="enlarge2" Storyboard="{StaticResource EnlargePlayer2Story}"/>
					</i:EventTrigger>
					<i:EventTrigger SourceObject="{Binding Control, Mode=OneWay}" EventName="Player1sTurn">
						<ei:ControlStoryboardAction x:Name="shrink2" Storyboard="{StaticResource ShrinkPlayer2Story}"/>
					</i:EventTrigger>
				</i:Interaction.Triggers>
			</Image>
			<Image x:Name="Circle" Height="65" Margin="0,0,0,175" VerticalAlignment="Center" Width="65" HorizontalAlignment="Center"/>
			<Image Height="50" Margin="0,0,0,170" VerticalAlignment="Center" Width="50" HorizontalAlignment="Center" Source="Resource/white.png"/>
			<Image Height="50" Margin="0,0,0,170" VerticalAlignment="Center" Width="50" HorizontalAlignment="Center" Source="Resource/black.png" Grid.Column="2"/>
			
		</Grid>
		<!--ContentPanel - place additional content here-->
	</Grid>


</phone:PhoneApplicationPage>